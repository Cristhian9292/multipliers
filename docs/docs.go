// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/healthcheck": {
            "get": {
                "description": "Checks if the service is up and returns the string \"UP\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Healtcheck"
                ],
                "summary": "Checks if the service is up",
                "responses": {
                    "200": {
                        "description": "UP",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/multipliers": {
            "get": {
                "description": "Returns the value from a specific number between 1 and 100 if the number is multiplier from 3, 5 or both returns Type 1, Type 2 or Type 3 respectively",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get a value"
                ],
                "summary": "Retrieves a value from a specific number",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Un numero entre 1 y 100",
                        "name": "number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseGet"
                        }
                    }
                }
            },
            "post": {
                "description": "Receives a number and saves it into a collection",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Save"
                ],
                "summary": "Saves a number into a collection",
                "parameters": [
                    {
                        "description": "A number between 1-100",
                        "name": "number",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/multipliers/collection": {
            "get": {
                "description": "Returns the values from a collection, if its empty returns null",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get collection"
                ],
                "summary": "Retrieves the values from a collection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseCollection"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.RequestBody": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "example": 65
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Saved!"
                }
            }
        },
        "models.ResponseCollection": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                }
            }
        },
        "models.ResponseGet": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Type 1"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Multipliers",
	Description:      "A Multipliers Service API in Go using Gin framework",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
